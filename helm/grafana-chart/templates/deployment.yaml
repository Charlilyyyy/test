apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "grafana-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "grafana-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "grafana-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "grafana-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: grafana
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.containerPort }}
              name: http
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: {{ .Values.adminUser | quote }}
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.adminPassword | quote }}
            {{- if .Values.plugins }}
            - name: GF_INSTALL_PLUGINS
              value: {{ join "," .Values.plugins | quote }}
            {{- end }}
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            {{- if .Values.datasources.enabled }}
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: grafana-storage
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.datasources.enabled }}
        - name: grafana-datasources
          configMap:
            name: {{ .Release.Name }}-datasources
        {{- end }}

