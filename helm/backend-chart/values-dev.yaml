namespace: dev-test
replicaCount: 1
image:
  repository: charlilyyyy/test-be
  tag: "latest"
  pullPolicy: IfNotPresent
containerPort: 8000
service:
  type: ClusterIP
  port: 8000
ingress:
  enabled: false
  className: ""
  annotations: {}
  # hosts:
  #   - host: fastapi.example.com
  #     paths:
  #       - path: /
  #         pathType: Prefix
  tls: []
nodeSelector: {}
tolerations: []
affinity:
  # Prefer minikube node but allow fallback to other nodes
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      preference:
        matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - minikube
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/os
          operator: In
          values:
          - linux
  # Anti-affinity to spread pods across nodes when possible
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 50
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - backend-chart
        topologyKey: kubernetes.io/hostname
# imagePullSecrets:
#   - name: acr-creds

# Configuration values
config:
  environment: "development"
  logLevel: "INFO"
  corsOrigins: "http://localhost:5173,http://localhost:3000"
  apiVersion: "v1"
  debug: "true"

# Azure Key Vault configuration
keyVault:
  vaultName: "your-keyvault-name"
  vaultUrl: "https://your-keyvault-name.vault.azure.net/"
  tenantId: "your-tenant-id"
  clientId: "your-client-id"
  clientSecret: "your-client-secret"
  userAssignedIdentityID: "your-managed-identity-id"
  secrets:
    apiToken:
      name: "api-token"
      version: ""
    databasePassword:
      name: "database-password"
      version: ""
    jwtSecret:
      name: "jwt-secret"
      version: ""