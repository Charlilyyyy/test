# Default values for prometheus-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Namespace for Prometheus deployment
namespace: dev-test

# This will set the replicaset count
replicaCount: 1

# This sets the container image
image:
  repository: prom/prometheus
  pullPolicy: IfNotPresent
  tag: "v2.45.0"

# Container port
containerPort: 9090

# This is for the secrets for pulling an image from a private repository
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# RBAC configuration
rbac:
  create: true

# This is for setting Kubernetes Annotations to a Pod.
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
podLabels: {}

podSecurityContext: {}

securityContext: {}

# This is for setting up a service
service:
  type: ClusterIP
  port: 9090

# Prometheus configuration
prometheus:
  scrapeInterval: 15s
  evaluationInterval: 15s
  # Add scrape configs for monitoring
  scrapeConfigs:
    - job_name: 'prometheus'
      static_configs:
        - targets: ['localhost:9090']
    
    # Scrape all pods in all namespaces
    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        # Add namespace label
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        # Add pod name label
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
        # Add pod label annotations
        - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
          action: replace
          target_label: app
        # Only scrape pods with prometheus.io/scrape annotation
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        # Use custom metrics path if specified
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        # Use custom port if specified
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
    
    # Scrape services in dev-test namespace
    - job_name: 'dev-test-services'
      kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
              - dev-test
      relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: service
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: pod
    
    # Scrape node-exporter for host metrics
    - job_name: 'node-exporter'
      kubernetes_sd_configs:
        - role: endpoints
      relabel_configs:
        # Only keep endpoints with prometheus.io/scrape annotation
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        # Only keep node-exporter service
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: node-exporter
        # Add node name label
        - source_labels: [__meta_kubernetes_endpoint_node_name]
          action: replace
          target_label: node
        # Add service name label
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: service

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

# Additional volumes
volumes: []

# Additional volumeMounts
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

# Persistent storage
persistence:
  enabled: false
  size: 8Gi
  storageClass: ""

